*Bateria de pruebas en curso


(ver que tanto progreso de checklist esta ejecutado:
BYTESTOTAL=`wc -c CHECKLIST|awk '{printf $1}'`
BYTESPARCIAL=`wc -c current_checklist.txt|awk '{printf $1}'`
PERC=$(($BYTESPARCIAL*100))
PERC=$(($PERC/$BYTESTOTAL))
PERCCOMPLETADO=$((100-$PERC))
echo "Porcentaje=$PERCCOMPLETADO %"
)

-probar rendimiento cpu (benchmark*txt). con ao null vo null y ao null vo x11, sin memptr,sin visualmem, sin cpustats
ok Mac


Drivers video:
-probar drivers video xwindows, sdl, fbdev, curses, aa, caca, stdout, simpletext, null. desde dentro de xwindows y desde consola de texto real
*por cada driver (incluido null) y con y sin pthreads:
**probar redimensionar ventana
**probar cambio zoom desde menu
**probar fullscreen en aquellos que lo soportan: xwindows, fbdev, sdl, cocoa
**probar todas maquinas. probar teclas mayus, ctrl, alt. en z88 mayus izq, der, ctrl, alt, f1, f2, f3
**probar ocultar raton
**probar zx desktop, botones zx desktop
**probar F6, F7 en caca, aa en Z88 y en Spectrum
**probar drag&drop en cocoa, sdl2 (a partir 2.0.5)
**probar desactivando border
**probar desactivando footer
**en aa, caca, stdout, simpletext probar juegos para ver que tal "emula" los graficos
**en aa, caca, stdout, simpletext probar realvideo
**en aa, caca probar mensajes debug
**en stdout, probar con modo traprst16 y modo autoredraw
**en fbdev, probar tambien con --no-use-ttyfbdev y --no-use-ttyrawfbdev y --decimal-full-scale-fbdev
-ejecutar ./testvideo.sh
ok stdout, simpletext, curses, cocoa


-probar desactivando xextensions en configure con --disable-xext
-probar desactivando algun driver de video en compilacion, como x11, y ver que funcionan los otros

Drivers audio:
-probar drivers sonido pulse, alsa, dsp, sdl, coreaudio, null. con y sin pthreads
*por cada driver (incluido null) y con y sin pthreads:
**quitar multitask de menu
**esperar a silencio
**ver en todos casos usos de cpu
**probar sonido Z88, Spectrum (beep y ay), ZX80/81 (vsync sound y ay)
**aumentar/bajar velocidad cpu
***usar testsound.sh
***en dsp, si no se tiene dsp real, se puede probar con aoss (que se oye entrecortado continuo) o en cygwin (que distorsiona)

ok coreaudio, null

-probar targets:
* linux 32 bits
* linux 64 bits
* raspberry. y activando extensiones raspberry
* mac os x, con opengl y sin ok
* windows mingw, con y sin pthreads
* windows cygwin



-probar custom rom desde menu y desde linea de comandos. probar todas roms
-probar midi output to real device
-probar snaps de spectrum, zx80, zx81, z88. Cargar y grabar. .zx, .o, .p, .z80, solo carga: .z81, .sna. En grabar, generar los mismos p** que hay en snap_tests/ en una carpeta temporal y luego probar a cargarlos (desde zesarux, fuse y eightyone) - esto se hace con automatic_test_save_all.sh. Probar snaps grabados en otros emuladores: Fuse, Eightyone, etc. 
-probar cintas. Cargar cinta con formato tap, tzx. Grabar cinta con comando save en tap, tzx, p, o
-probar a guardar snapshots versiones anteriores (1, 2, 3, 4, 5 y 6) y cargar en ZEsarUX versiones viejas y ZXSpectr
-probar any flag loading cintas, con copiador, rocman
-probar expansor archivos tap, tzx, dsk, trd, etc
-probar cambiando rutas a sox, gunzip, etc...

-probar diferentes cargas, a continuacion, hay ejemplos en carpeta snap_tests y tambien alguno suelto, como canciones.smp y orquesta.smp
*probar carga binaria (tape) smp,wav,rwa en spectrum
*probar carga binaria (tape) smp,wav,rwa en zx80
*probar carga binaria (tape) smp,wav,rwa en zx81: con audio real, con save desde basic y aofile (wav y rwa), con rutina de conversion de .p a rwa en real tape
*probar carga realtape : spectrum: smp,wav,rwa,tap,tzx (tzx normal y turbo). zx80: smp,wav,rwa,o. zx81: smp,wav,rwa,p

-probar linea comandos: --tape, --realtape, --snap, --slotcard, --outtape
-probar ZXMMC menor de 1 GB y mayor de 1 GB. Probar snap_tests/pruebasplus3e.mmc. cat tab, load, format to 0,4, etc
-probar esxdos handler
-probar zxpand: config "V", config "D=", CAT, CAT "+DIR", DELETE, load "NOMBRE", SAVE "NOMBRE" etc. En zx80, zx81
config "O=X" donde X es 0, 1 o 2 y probar a sobreescribir archivos, dragons lair version lenta y rapida (optimizada). zxpand linea comandos --enable-zxpand y --zxpand-root-dir (y este probando con path completo, relativo, y con y sin / al final)
Probar delete, rename, etc y resto de acciones con CMDR, con archivos en minusculas y mayusculas
-probar superupgrade. Básico, programa de modificación de rom. Programa en basic extras/media/spectrum/tests/superupgrade-test.tap y usando 512kb de rom que sean siempre la misma rom de spectrum 48k. Probar con rman.tap
-probar simulacion de carga en spectrum, zx80, zx81
-probar audio filter on rom save

-probar a sobreescribir algun archivo y que pida confirmacion en menu
-probar advanced timing settings 
-probar menu de stdout
-probar cargar/grabar pantalla en spectrum 48, 128, +2a, zxuno
-probar cargar/grabar archivo binario. probar cargar binario desde linea comandos
-probar breakpoint condicionales (=,<,> y con registros indirectos (hl), con and or xor) , operadores bitwise &|^ en variables
-probar zxi ports con extras/media/spectrum/tests/zesarux-zxi-ports.tap , extras/media/spectrum/tests/hardwaredebugport.tap
-probar quicksave, autosave at interval
-probar fallback de drivers graficos y de sonido
-probar impresora: en zx spectrum, zx81
-probar COPY to printer
-probar --verbose 0 y que no aparezca ningun mensaje por consola...
-probar custom configuration file, con snap_tests/test_autoconfig.tap  (y hay snap_tests/test_autoconfig.tap.config) y snap_tests/test_autoconfig.p (y hay snap_tests/test_autoconfig.p.config)
-probar --limitopenmenu
-probar realjoystick. probar opciones linea comandos: --joystickkeyev, --joystickkeybt, --joystickevent. Probar menu test joystick. Probar joystick sdl, joystick nativo linux, joystick simulator, disable joystick. En todos casos probar quitar y poner border (porque reinicializa drivers)
-probar teclas en menu: normal, mayus, minus, -+ ,. TAB BACKSPACE, en mk14, zx8081, spectrum,  , ql, cpc, z88  ( ',' y "." en zx80/81 no va en menu porque se interpreta como symbol+shift y es lo mismo que TAB). en driver xwindow y curses, para cada maquina (total: 6 pruebas)
-probar rutinas autodeteccion caracteres: algunos de sslfunctions, otro no listado (como Spiderman o masters of the universe), hobbit (usa dos rutinas de caracteres). probar con stdout y xwindows, sdl, etc. probar --enableprintchartrap y --disableprintchartrap en stdout y xwindows
-probar opcion para desactivar paging en ram/rom
-probar cpu transaction log
-probar emulator speed
-probar top speed, con threads y sin threads
-probar mantransferv3
-probar multiface

-keymaps en xwindows y sdl para z88, cpc, chloe, sam, ql, ...

-probar Jupiter Ace. centipede (chip ay) y valkyr (speaker y chip ay). cargar y grabar ace. cargar wav
-probar Chloe 140, 280. Tests, carga trap, grabar tap, chloe keyboard
-Probar Prism: extras/media/spectrum/prism/allvideotests.tap. Tests de chloe. Failsafe mode. Modos lineales de video extras/media/spectrum/prism/linear_modes/
-Probar Sam Coupe. Todas teclas. Probar atomlite
-Probar Chrome
-Probar MK14

-probar Sprite chip con demo
-probar textos splash en cambio de modo de video por ejemplo
-probar usar extension de archivo no conocida y ver que avisa
-probar activando funciones de captura de segmentation fault y forzando fallo
-probar cpu_panic. desde dentro del emulador y antes de entrar 
-probar en general mayoria de cintas, snaps y eproms incluidas
-probar instalando en ruta concreta y ejecutando desde alli
-probar generando archivo binario y probar a ejecutar, e instalar. 
-probar generando archivo source y probar a compilar e instalar cambiando prefix
-probar versiones finales: binario->bajar y ejecutar, instalar. source->bajar, compilar y ejecutar, instalar.

pruebas Z88:
-cambio ram interna
-agregar ram externa
-eprom (formatos .eprom, .epr y .63): crear eprom, agregar eprom (eprom, epr y .63), borrado eprom, copia de eprom (desde menu emulador y desde Filer), copia a eprom (desde menu emulador (y llenando la eprom hasta que no quepa mas)  y desde filer), reclaim free space eprom, undelete eprom, insertar eprom desde linea de comandos. insertar en slot 1 o 2 (no escritura)
-flash: crear flash, agregar flash, borrar flash, copia de flash (desde menu emulador y desde Filer), copia a flash (desde menu emulador (y llenando la flash hasta que no quepa mas)  y desde filer), inicializar flash desde flashstore (y ver que la funcion de erase lo graba con FF), reclaim free space flash, undelete flash, insertar flash desde linea de comandos. insertar en slot 1 o 2 (no escritura)
-probar card browser con flash y eprom.
-tarjeta hibrida ram+eprom: insertar la de actualizacion a oz 4.7 a ver si la reconoce y si reconoce RAM
-grabar snaps con eproms y flash en diferentes slots
-probar en menus tarjetas de aplicaciones, archivos, desconocidas
-probar sonido normal beeper (teclas, juegos, etc) y 3200 hz snap_tests/test3200z88.zx

pruebas QL
-teclado:

the main thing to check is the character codes - use:
REP Loop:print code(inkey$(-1))

This will show the character code for each pressed key.

In particular check 

a (97)
CTRL a (1) 
and 
ALT a ( ALT is awkard, it returns 255 plus the character code, so you should see on screen two values, 255 then 97 when you press this combination)

-cargar manualmente juegos en memoria mediante load binary
-cargar lbytes mediante emulacion de microdrive&floppy
